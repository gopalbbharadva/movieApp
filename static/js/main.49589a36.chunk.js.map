{"version":3,"sources":["Components/Movie.js","Components/Favourite.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","props","useState","toolTip","setTooltipHandler","className","movies","map","movie","index","src","poster_path","alt","title","vote","vote_average","style","display","color","justifyContent","alignItems","onClick","favouriteMovie","onMouseEnter","onMouseLeave","icon","faPlusCircle","overview","Favourite","cursor","fontSize","faTrash","toast","configure","App","setMovies","setColor","flag","flagHandler","searchQuery","setSearchQuery","addFavourite","favouriteMovieHandler","useEffect","getMoviesData","api","a","fetch","then","res","json","data","console","log","results","formHandler","e","preventDefault","exact","path","backgroundColor","to","onSubmit","onChange","target","value","type","placeholder","currentMovie","success","position","POSITION","BOTTOM_CENTER","autoClose","width","onChangeComplete","clr","hex","tempMovies","slice","splice","error","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.49589a36.chunk.js","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle } from \"@fortawesome/free-solid-svg-icons\";\n\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\n\nconst Movie = (props) => {\n  const setClassColor = (vote) => {\n    if (vote > 7) return \"green\";\n    else if (vote > 7 && vote < 4.5) return \"orange\";\n    else return \"red\";\n  };\n\n  let [toolTip, setTooltipHandler] = useState(false);\n\n  const setTooltip = () => {\n    if (toolTip) return \"block\";\n    else return \"none\";\n  };\n\n  return (\n    <div className=\"movie-container\">\n      {props.movies.map((movie,index) => {\n        return (\n          <div key={index} className=\"movie\">\n            <img\n              src={\n                movie.poster_path\n                  ? imagepath + movie.poster_path\n                  : \"https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              }\n              alt={movie.title}\n            />\n            <div className=\"movie-info\">\n              <h3>{movie.title}</h3>\n              <span className={`tag ${setClassColor(movie.vote_average)}`}>\n                {movie.vote_average}\n              </span>\n            </div>\n            <div className=\"movie-overview\">\n              <label style={{ display: setTooltip(), color: \"#34D399\" }}>\n                Add to Favourites\n              </label>\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3>Overview</h3>\n                <FontAwesomeIcon\n                  onClick={()=>props.favouriteMovie(movie)}\n                  onMouseEnter={() => setTooltipHandler(true)}\n                  onMouseLeave={() => setTooltipHandler(false)}\n                  className=\"favoritesBtn\"\n                  icon={faPlusCircle}\n                ></FontAwesomeIcon>\n              </div>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Movie;\n","import { useState } from \"react\";\nimport React, { Component } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlusCircle, faTrash } from \"@fortawesome/free-solid-svg-icons\";\n\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\n\nconst Favourite = (props) => {\n  const setClassColor = (vote) => {\n    if (vote > 7) return \"green\";\n    else if (vote > 7 && vote < 4.5) return \"orange\";\n    else return \"red\";\n  };\n  return (\n    <div className=\"movie-container\">\n      {props.movies.map((movie, index) => {\n        return (\n          <div key={index} className=\"movie\">\n            <img\n              src={\n                movie.poster_path\n                  ? imagepath + movie.poster_path\n                  : \"https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60\"\n              }\n              alt={movie.title}\n            />\n            <div className=\"movie-info\">\n              <h3>{movie.title}</h3>\n              <span className={`tag ${setClassColor(movie.vote_average)}`}>\n                {movie.vote_average}\n              </span>\n            </div>\n            <div className=\"movie-overview\">\n              {/* <label style={{ display: setTooltip(), color: \"#34D399\" }}>\n              Add to Favourites\n            </label> */}\n              <div\n                style={{\n                  display: \"flex\",\n                  justifyContent: \"space-between\",\n                  alignItems: \"center\",\n                }}\n              >\n                <h3>Overview</h3>\n                <FontAwesomeIcon\n                  onClick={() => props.favouriteMovie(index)}\n                  style={{\n                    cursor: \"pointer\",\n                    fontSize: \"1.6rem\",\n                    color: \"red\",\n                  }}\n                  //   className=\"favoritesBtn\"\n                  icon={faTrash}\n                ></FontAwesomeIcon>\n              </div>\n              <p>{movie.overview}</p>\n            </div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Favourite;\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport { SketchPicker } from \"react-color\";\nimport Movie from \"./Components/Movie\";\nimport Favourite from \"./Components/Favourite\";\nimport { toast } from \"react-toastify\";\nimport \"react-toastify/dist/ReactToastify.css\";\n\nimport {\n  Route,\n  BrowserRouter as Router,\n  Switch,\n  Redirect,\n  NavLink,\n  Link,\n} from \"react-router-dom\";\n\nconst movie_api =\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n\nconst search_api =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\ntoast.configure();\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  let [color, setColor] = useState(\"\");\n  const [flag, flagHandler] = useState(false);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [addFavourite, favouriteMovieHandler] = useState([]);\n\n  useEffect(() => {\n    getMoviesData(movie_api);\n  }, []);\n\n  const getMoviesData = async (api) => {\n    await fetch(api)\n      .then((res) => res.json())\n      .then((data) => {\n        console.log(data);\n        setMovies(data.results);\n      });\n  };\n\n  const formHandler = async (e) => {\n    e.preventDefault();\n    getMoviesData(search_api + searchQuery);\n    setSearchQuery(\"\");\n  };\n\n  const searchInputHandler = (e) => {\n    setSearchQuery(e.target.value);\n  };\n\n  const colorHandler = (clr) => {\n    color = clr.hex;\n    console.log(color);\n    if (color) setColor(color);\n  };\n\n  const btnHandler = () => {\n    if (color) flagHandler(true);\n    else flagHandler(false);\n  };\n\n  const favouriteMovie = (movie) => {\n    const currentMovie = [...addFavourite, movie];\n    favouriteMovieHandler(currentMovie);\n    toast.success(`${movie.title} is added`, {\n      position: toast.POSITION.BOTTOM_CENTER,\n      autoClose: 1500,\n    });\n  };\n\n  const deleteFavourite = (index) => {\n    const tempMovies = addFavourite.slice();\n    tempMovies.splice(index, 1);\n    favouriteMovieHandler(tempMovies);\n    toast.error(`${movies[index].title} is removed`, {\n      position: toast.POSITION.BOTTOM_CENTER,\n      autoClose: 1500,\n    });\n  };\n\n  return (\n    <Router>\n      <Route exact path=\"/movieApp\">\n        <div>\n          {!flag ? (\n            <div\n              className=\"color-container\"\n            >\n              <p>Choose your favourite color</p>\n              <SketchPicker style={{width:\"100%\"}} color={color} onChangeComplete={colorHandler} />\n              <button className=\"colorBtn\" onClick={btnHandler}>Submit</button>\n            </div>\n          ) : (\n            <div>\n              <header style={{ backgroundColor: `${color}` }}>\n                <NavLink\n                  style={{ color:`${color==='#ffffff'?'black':'white'}`}}\n                  exact\n                  to=\"/fv\"\n                  // style={{color:\"white\"}}\n                >\n                  Favourites\n                </NavLink>\n                <form onSubmit={formHandler}>\n                  <input\n                    onChange={searchInputHandler}\n                    type=\"text\"\n                    className=\"search\"\n                    value={searchQuery}\n                    placeholder=\"Search...\"\n                  />\n                </form>\n              </header>\n              <div style={{ backgroundColor: `${color}` }}>\n                {/* {movies.map((item) => {\n              return <Movie key={item.id}  {...item} />;\n            })} */}\n                <Movie movies={movies} favouriteMovie={favouriteMovie} />\n              </div>\n            </div>\n          )}\n        </div>\n      </Route>\n      <Route>\n        <div style={{ backgroundColor: `${color}` }}>\n          {/* {movies.map((item) => {\n              return <Movie key={item.id}  {...item} />;\n            })} */}\n          <Favourite movies={addFavourite} favouriteMovie={deleteFavourite} />\n        </div>\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport Main from './Main';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}