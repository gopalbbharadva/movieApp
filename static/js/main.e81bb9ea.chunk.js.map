{"version":3,"sources":["Components/Movie.js","App.js","reportWebVitals.js","index.js"],"names":["Movie","vote","title","overview","poster_path","vote_average","className","src","alt","App","useState","movies","setMovies","searchQuery","setSearchQuery","useEffect","getMoviesData","api","a","fetch","then","res","json","data","console","log","results","formHandler","e","preventDefault","onSubmit","onChange","target","value","type","placeholder","map","item","id","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"sPA8BeA,EAzBH,SAAC,GAA6C,IAEjCC,EAFXC,EAA2C,EAA3CA,MAAMC,EAAqC,EAArCA,SAASC,EAA4B,EAA5BA,YAAYC,EAAgB,EAAhBA,aAUrC,OACI,sBAAKC,UAAU,QAAf,UACI,qBAAKC,IAAKH,EAdJ,mCAc2BA,EAAa,yKAA0KI,IAAKN,IAC7N,sBAAKI,UAAU,aAAf,UACI,6BAAKJ,IACL,sBAAMI,UAAS,eAbNL,EAa6BI,EAZ3CJ,EAAO,EACC,QACHA,EAAM,GAAKA,EAAM,IACd,SAEA,QAOH,SAAwDI,OAE5D,sBAAKC,UAAU,iBAAf,UACI,0CACA,4BAAIH,WCkCLM,MAhDf,WACE,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAsCF,mBAAS,IAA/C,mBAAOG,EAAP,KAAoBC,EAApB,KAEAC,qBAAU,WACRC,EAVF,yHAWG,IAEH,IAAMA,EAAa,uCAAC,WAAOC,GAAP,SAAAC,EAAA,sEACZC,MAAMF,GACXG,MAAK,SAACC,GAAD,OAASA,EAAIC,UAClBF,MAAK,SAACG,GACLC,QAAQC,IAAIF,GACZX,EAAUW,EAAKG,YALC,2CAAD,sDASbC,EAAW,uCAAG,WAAOC,GAAP,SAAAV,EAAA,sDAClBU,EAAEC,iBACFb,EArBF,6FAqB2BH,GACzBC,EAAe,IAHG,2CAAH,sDASjB,OACE,gCACE,iCACE,sBAAMgB,SAAUH,EAAhB,SACE,uBACEI,SARiB,SAACH,GAC1Bd,EAAec,EAAEI,OAAOC,QAQhBC,KAAK,OACL5B,UAAU,SACV2B,MAAOpB,EACPsB,YAAY,kBAIlB,qBAAK7B,UAAU,kBAAf,SACGK,EAAOyB,KAAI,SAACC,GACX,OAAO,cAAC,EAAD,eAAyBA,GAAbA,EAAKC,aCvCnBC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrB,MAAK,YAAkD,IAA/CsB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.e81bb9ea.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\n\nconst imagepath = \"https://image.tmdb.org/t/p/w1280\";\n\nconst Movie=({title,overview,poster_path,vote_average})=>{\n\n    const setClassColor=(vote)=>{\n        if(vote > 7)\n            return 'green';\n        else if(vote >7 && vote <4.5)\n            return 'orange';\n        else \n            return 'red';\n    }\n    return(\n        <div className=\"movie\">\n            <img src={poster_path?(imagepath+poster_path):'https://images.unsplash.com/photo-1543536448-d209d2d13a1c?ixid=MnwxMjA3fDB8MHxzZWFyY2h8MTB8fG1vdmllfGVufDB8fDB8fA%3D%3D&ixlib=rb-1.2.1&auto=format&fit=crop&w=500&q=60'} alt={title}/>\n            <div className=\"movie-info\">\n                <h3>{title}</h3>\n                <span className={`tag ${setClassColor(vote_average)}`}>{vote_average}</span>\n            </div>\n            <div className=\"movie-overview\">\n                <h3>Overview</h3>\n                <p>{overview}</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Movie;\n\n","import { useEffect, useState } from \"react\";\nimport \"./App.css\";\nimport Movie from \"./Components/Movie\";\n\nconst movie_api =\n  \"https://api.themoviedb.org/3/discover/movie?sort_by=popularity.desc&api_key=04c35731a5ee918f014970082a0088b1&page=1\";\n\nconst search_api =\n  \"https://api.themoviedb.org/3/search/movie?&api_key=04c35731a5ee918f014970082a0088b1&query=\";\n\nfunction App() {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n\n  useEffect(() => {\n    getMoviesData(movie_api);\n  }, []);\n\n  const getMoviesData=async (api)=>{\n    await fetch(api)\n    .then((res) => res.json())\n    .then((data) => {\n      console.log(data);\n      setMovies(data.results);\n    });\n  }\n\n  const formHandler = async (e) => {\n    e.preventDefault();\n    getMoviesData(search_api+searchQuery)\n    setSearchQuery('');\n  };\n\n  const searchInputHandler = (e) => {\n    setSearchQuery(e.target.value);\n  };\n  return (\n    <div>\n      <header>\n        <form onSubmit={formHandler}>\n          <input\n            onChange={searchInputHandler}\n            type=\"text\"\n            className=\"search\"\n            value={searchQuery}\n            placeholder=\"Search...\"\n          />\n        </form>\n      </header>\n      <div className=\"movie-container\">\n        {movies.map((item) => {\n          return <Movie key={item.id} {...item} />;\n        })}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}